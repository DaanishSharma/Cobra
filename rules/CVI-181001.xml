<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="remote command execution"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[(system|passthru|exec|pcntl_exec|shell_exec|popen|proc_open|ob_start|expect_popen|mb_send_mail|w32api_register_function|w32api_invoke_function|ssh2_exec)]]></match>
    <repair block="in-function"><![CDATA[(escapeshellcmd|escapeshellarg)]]></repair>
    <level value="10"/>
    <test>
        <case assert="true"><![CDATA[system($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[passthru($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[exec($_GET['pass1'],$_GET['pass2']);]]></case>
        <case assert="true"><![CDATA[pcntl_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[shell_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[proc_open('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ob_start('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[expect_popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ssh2_exec($connection, '$_GET['pass']');]]></case>
    </test>
    <solution>
        ## Security Risk
        When the application needs to call some external programs to process the content, it will use some functions that execute system commands.
        When the user can control the parameters in the command execution function, malicious system commands can be injected into normal commands, resulting in command execution attacks.

        ## fix
        1. Try not to use functions that execute commands.
        2. The external controllable parameters enter the execution command function to be strictly filtered (such as using escapeshellcmd or escapeshellarg to filter parameters)
        3. Upgrade ImageMagick to the latest version

        ## code samples

        ````
        <?php
            $ip=$_GET['ip'];
            system("ping"+$ip);
        ?>
        ````
        Constructing `http://www.test.com/test.php?ip=127.0.0.1|ifconfig` will cause a command injection attack

        correct code example
        ````php
        <?php
            $command = './configure '.$_POST['configure_options'];// allows any number of parameters
            $escaped_command = escapeshellcmd($command);
            system($escaped_command);
        ?>
        ````
    </solution>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>