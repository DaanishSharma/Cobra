<?xml version="1.0" encoding="UTF-8"?>

<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="unsafe random number"/>
    <language value="java"/>
    <match mode="regex-only-match"><![CDATA[new Random\s*\(|Random\.next]]></match>
    <match2 block="in-file-up"><![CDATA[((java|scala)\.util\.Random)]]></match2>
    <level value="2"/>
    <solution><![CDATA[
        ## Security Risk
        Using predictable random numbers can lead to vulnerabilities.

        ## fix
        It is recommended to use `java.security.SecureRandom` instead of `java.util.Random`.
        ````java
        import org.apache.commons.codec.binary.Hex;

        String generateSecretToken() {
            SecureRandom secRandom = new SecureRandom();

            byte[] result = new byte[32];
            secRandom.nextBytes(result);
            return Hex.encodeHexString(result);
        }
        ````
        - [CWE-330](http://cwe.mitre.org/data/definitions/330.html)
]]>
    </solution>
    <test>
        <case assert="true"><![CDATA[Random r = new Random();]]></case>
        <case assert="true"><![CDATA[Random r = new Random  ();]]></case>
        <case assert="true"><![CDATA[Random.nextLong()]]></case>
    </test>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>